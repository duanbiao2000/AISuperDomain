<Project Sdk="Microsoft.NET.Sdk">
  <!-- 定义项目使用的SDK -->
  <PropertyGroup>
    <!-- 定义目标框架 -->
    <TargetFrameworks>net7.0-android;net7.0-ios;net7.0-maccatalyst</TargetFrameworks>
    <!-- 如果是Windows平台，则添加net7.0-windows10.0.19041.0框架 -->
    <TargetFrameworks Condition="$([MSBuild]::IsOSPlatform('windows'))">$(TargetFrameworks);net7.0-windows10.0.19041.0</TargetFrameworks>
    <!-- Uncomment to also build the tizen app. You will need to install tizen by following this: https://github.com/Samsung/Tizen.NET -->
    <!-- <TargetFrameworks>$(TargetFrameworks);net7.0-tizen</TargetFrameworks> -->
    <OutputType>Exe</OutputType>
    <AndroidPackageFormat>apk</AndroidPackageFormat>
    <RootNamespace>AIIntegrator</RootNamespace>
    <UseMaui>true</UseMaui>
    <SingleProject>true</SingleProject>
    <ImplicitUsings>enable</ImplicitUsings>
    <!-- Display name -->
    <ApplicationTitle>AIIntegrator</ApplicationTitle>
    <!-- App Identifier -->
    <ApplicationId>com.companyname.aiintegrator</ApplicationId>
    <ApplicationIdGuid>621bc59b-24ac-450d-bc1a-46247ba6ab5f</ApplicationIdGuid>
    <!-- Versions -->
    <ApplicationDisplayVersion>3.2</ApplicationDisplayVersion>
    <ApplicationVersion>3</ApplicationVersion>
    <SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'ios'">11.0</SupportedOSPlatformVersion>
    <SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'maccatalyst'">13.1</SupportedOSPlatformVersion>
    <SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'android'">21.0</SupportedOSPlatformVersion>
    <SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">10.0.17763.0</SupportedOSPlatformVersion>
    <TargetPlatformMinVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">10.0.17763.0</TargetPlatformMinVersion>
    <SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'tizen'">6.5</SupportedOSPlatformVersion>
    <GenerateAppInstallerFile>True</GenerateAppInstallerFile>
    <AppxAutoIncrementPackageRevision>True</AppxAutoIncrementPackageRevision>
    <AppxSymbolPackageEnabled>True</AppxSymbolPackageEnabled>
    <GenerateTestArtifacts>True</GenerateTestArtifacts>
    <AppInstallerUri>C:\Program Files\AISuperDomain</AppInstallerUri>
    <HoursBetweenUpdateChecks>0</HoursBetweenUpdateChecks>
    <AppxPackageSigningEnabled>True</AppxPackageSigningEnabled>
    <AppxPackageSigningTimestampDigestAlgorithm>SHA256</AppxPackageSigningTimestampDigestAlgorithm>
    <PackageCertificateKeyFile>AIIntegrator_TemporaryKey.pfx</PackageCertificateKeyFile>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(TargetFramework)|$(Platform)'=='Debug|net7.0-android|AnyCPU'">
    <ApplicationTitle>AIIntegrator</ApplicationTitle>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(TargetFramework)|$(Platform)'=='Release|net7.0-android|AnyCPU'">
    <ApplicationTitle>AIIntegrator</ApplicationTitle>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(TargetFramework)|$(Platform)'=='Debug|net7.0-ios|AnyCPU'">
    <ApplicationTitle>AIIntegrator</ApplicationTitle>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(TargetFramework)|$(Platform)'=='Release|net7.0-ios|AnyCPU'">
    <ApplicationTitle>AIIntegrator</ApplicationTitle>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(TargetFramework)|$(Platform)'=='Debug|net7.0-maccatalyst|AnyCPU'">
    <ApplicationTitle>AIIntegrator</ApplicationTitle>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(TargetFramework)|$(Platform)'=='Release|net7.0-maccatalyst|AnyCPU'">
    <ApplicationTitle>AIIntegrator</ApplicationTitle>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(TargetFramework)|$(Platform)'=='Debug|net7.0-windows10.0.19041.0|AnyCPU'">
    <ApplicationTitle>AIIntegrator</ApplicationTitle>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(TargetFramework)|$(Platform)'=='Release|net7.0-windows10.0.19041.0|AnyCPU'">
    <ApplicationTitle>AIIntegrator</ApplicationTitle>
  </PropertyGroup>
  <ItemGroup>
    <!-- App Icon -->
    <MauiIcon Include="Resources\AppIcon\appicon.svg" />
    <!-- Splash Screen -->
    <MauiSplashScreen Include="Resources\Splash\splash.svg" Color="#512BD4" BaseSize="128,128" />
    <!-- Images -->
    <MauiImage Include="Resources\Images\*" />
    <!-- Custom Fonts -->
    <MauiFont Include="Resources\Fonts\*" />
    <!-- Raw Assets (also remove the "Resources\Raw" prefix) -->
    <MauiAsset Include="Resources\Raw\**" LogicalName="%(RecursiveDir)%(Filename)%(Extension)" />
  </ItemGroup>
  <ItemGroup>
    <None Remove="Resources\Images\about.png" />
    <None Remove="Resources\Images\ai.png" />
    <None Remove="Resources\Images\paint.png" />
    <None Remove="Resources\Images\prompt.png" />
    <None Remove="Resources\Images\sort.png" />
    <None Remove="Resources\Images\switch.png" />
    <None Remove="Resources\Images\translate.png" />
    <None Remove="Resources\Images\update.png" />
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="Microsoft.Extensions.Logging.Debug" Version="7.0.0" />
    <PackageReference Include="Newtonsoft.Json" Version="13.0.3" />
    <PackageReference Include="Obfuscar" Version="2.2.37">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="SixLabors.ImageSharp" Version="3.1.3" />
  </ItemGroup>
  <ItemGroup>
    <MauiXaml Update="AISortContentView.xaml">
      <Generator>MSBuild:Compile</Generator>
    </MauiXaml>
    <MauiXaml Update="SelectAIContentView.xaml">
      <Generator>MSBuild:Compile</Generator>
    </MauiXaml>
  </ItemGroup>
  <!-- 定义一个名为PostBuild的Target，在PostBuildEvent之后执行 -->
  <Target Name="PostBuild" AfterTargets="PostBuildEvent">
    <!-- 执行一个命令，输出Release@@Any CPU -->
    <Exec Command="echo Release@@Any CPU&#xD;&#xA;if &quot;$(ConfigurationName)&quot; == &quot;Release&quot; (if &quot;$(PlatformName)&quot; == &quot;AnyCPU&quot; (&quot;$(ProjectDir)_Obfuscar\Obfuscar.Console.exe&quot; &quot;$(ProjectDir)_Obfuscar\obfuscar_Release_Any_CPU.xml&quot;&#xD;&#xA;xcopy /e /v &quot;$(ProjectDir)bin\Release\net7.0-windows10.0.19041.0\win10-x64\\Out\&quot; &quot;$(ProjectDir)bin\Release\net7.0-windows10.0.19041.0\win10-x64\&quot; /Y))" />
    <!-- 执行一个命令，输出Debug@@Any CPU -->
    <Exec Command="echo Debug@@Any CPU&#xD;&#xA;if &quot;$(ConfigurationName)&quot; == &quot;Debug&quot; (if &quot;$(PlatformName)&quot; == &quot;AnyCPU&quot; (&quot;$(ProjectDir)_Obfuscar\Obfuscar.Console.exe&quot; &quot;$(ProjectDir)_Obfuscar\obfuscar_Debug_Any_CPU.xml&quot;&#xD;&#xA;xcopy /e /v &quot;$(ProjectDir)bin\Debug\net7.0-android\\Out\&quot; &quot;$(ProjectDir)bin\Debug\net7.0-android\&quot; /Y))" />
  </Target>
</Project>
